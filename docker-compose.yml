services:
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    env_file:
      - .env      
    depends_on:
      fastapi:
        condition: service_healthy
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - DB_URL=postgresql+psycopg://ai:ai@pgvector:5432/ai
      - BACKEND_URL=http://fastapi:8000
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 5

  pgvector:
    image: phidata/pgvector:16
    environment:
      POSTGRES_DB: ai
      POSTGRES_USER: ai
      POSTGRES_PASSWORD: ai
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5532:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai -d ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:    
    image: ollama/ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_ORIGINS=http://localhost:3000,http://localhost:8501,http://fastapi:8000,http://streamlit:8501

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    environment:
      - DB_URL=postgresql+psycopg://ai:ai@pgvector:5432/ai
      - OLLAMA_BASE_URL=http://ollama:11434
    depends_on:
      pgvector:
        condition: service_healthy
      ollama:
        condition: service_started
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  pgdata:
  ollama_data: