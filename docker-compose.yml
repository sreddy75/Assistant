services:
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    env_file:
      - .env
    depends_on:
      ollama:
        condition: service_healthy
      pgvector:
        condition: service_healthy
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - DB_URL=postgresql+psycopg://ai:ai@pgvector:5432/ai
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 5

  pgvector:
    image: phidata/pgvector:16
    environment:
      POSTGRES_DB: ai
      POSTGRES_USER: ai
      POSTGRES_PASSWORD: ai
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5532:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai -d ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434 && (ollama list | grep -q 'llama3' || exit 1)"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 5m
    command: >
      sh -c "
        ollama serve &
        until curl -s http://localhost:11434 > /dev/null; do sleep 1; done;
        ollama pull llama3 && 
        touch /tmp/model_ready && 
        wait
      "

volumes:
  pgdata:
  ollama_data: