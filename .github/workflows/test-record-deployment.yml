name: Test Azure DevOps Integration

on:
  workflow_dispatch:
    inputs:
      deployment_status:
        description: 'Deployment Status'
        required: true
        default: 'Success'
        type: choice
        options:
        - Success
        - Failure
        - In Progress

jobs:
  test-record-deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time

    - name: Record Deployment in Azure DevOps
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
      run: |
        # URL encode function
        urlencode() {
          local length="${#1}"
          for (( i = 0; i < length; i++ )); do
            local c="${1:i:1}"
            case $c in
              [a-zA-Z0-9.~_-]) printf "$c" ;;
              *) printf '%%%02X' "'$c" ;;
            esac
          done
        }

        # URL encode organization and project names
        ENCODED_ORG=$(urlencode "${AZURE_DEVOPS_ORG}")
        ENCODED_PROJECT=$(urlencode "${AZURE_DEVOPS_PROJECT}")

        # Construct the URL with encoded values
        URL="https://dev.azure.com/${ENCODED_ORG}/${ENCODED_PROJECT}/_apis/wit/workitems/\$Deployment?api-version=6.0"

        echo "Constructed URL: $URL"

        # Construct JSON data
        JSON_DATA=$(cat << EOF
        [
          {
            "op": "add",
            "path": "/fields/System.Title",
            "value": "Test Deployment ${{ github.run_number }}"
          },
          {
            "op": "add",
            "path": "/fields/System.State",
            "value": "Completed"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentID",
            "value": "${{ github.run_number }}"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentStatus",
            "value": "${{ github.event.inputs.deployment_status }}"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentTimestamp",
            "value": "${{ steps.current-time.outputs.time }}"
          }
        ]
        EOF
        )

        echo "JSON Data:"
        echo "$JSON_DATA"

        # Execute the curl command
        RESPONSE=$(curl -s -X POST "${URL}" \
          -H "Content-Type: application/json-patch+json" \
          -H "Authorization: Basic $(echo -n :${AZURE_DEVOPS_PAT} | base64)" \
          -d "$JSON_DATA")

        echo "API Response:"
        echo "$RESPONSE"

        # Check if the API call was successful
        if echo "$RESPONSE" | grep -q '"id":'; then
          echo "Deployment record created successfully"
        else
          echo "Failed to create deployment record"
          exit 1
        fi

    - name: Debug Output
      run: |
        echo "Deployment ID: ${{ github.run_number }}"
        echo "Deployment Status: ${{ github.event.inputs.deployment_status }}"
        echo "Timestamp: ${{ steps.current-time.outputs.time }}"