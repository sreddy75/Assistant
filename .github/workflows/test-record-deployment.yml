name: URL-Encoded Azure DevOps Integration

on:
  workflow_dispatch:
    inputs:
      deployment_status:
        description: 'Deployment Status'
        required: true
        default: 'Success'
        type: choice
        options:
        - Success
        - Failure
        - In Progress

jobs:
  record-deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time

    - name: Create curl script
      run: |
        cat > execute_curl.sh << EOL
        #!/bin/bash
        set -e

        # URL encode function
        urlencode() {
          local string="\${1}"
          local strlen=\${#string}
          local encoded=""
          local pos c o

          for (( pos=0 ; pos<strlen ; pos++ )); do
            c=\${string:\$pos:1}
            case "\$c" in
              [-_.~a-zA-Z0-9] ) o="\$c" ;;
              * )               printf -v o '%%%02x' "'$c"
            esac
            encoded+="\$o"
          done
          echo "\${encoded}"
        }

        # Define variables
        BASE_URL="https://dev.azure.com"
        ORG=\$(urlencode "\${1}")
        PROJECT=\$(urlencode "\${2}")
        API_PATH="_apis/wit/workitems/%24Deployment"
        QUERY_PARAMS="api-version=6.0"
        CONTENT_TYPE="application/json-patch+json"
        AUTH_HEADER="Authorization: Basic \${3}"
        
        # Construct full URL
        FULL_URL="\${BASE_URL}/\${ORG}/\${PROJECT}/\${API_PATH}?\${QUERY_PARAMS}"
        
        # Print debug information
        echo "Full URL: \${FULL_URL}"
        
        # Execute curl command
        curl -v -X POST "\${FULL_URL}" \
          -H "Content-Type: \${CONTENT_TYPE}" \
          -H "\${AUTH_HEADER}" \
          -d "\${4}"
        EOL

        chmod +x execute_curl.sh

    - name: Execute Azure DevOps API call
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
      run: |
        JSON_DATA=$(cat << EOF
        [
          {
            "op": "add",
            "path": "/fields/System.Title",
            "value": "Deployment ${{ github.run_number }}"
          },
          {
            "op": "add",
            "path": "/fields/System.State",
            "value": "Completed"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentID",
            "value": "${{ github.run_number }}"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentStatus",
            "value": "${{ github.event.inputs.deployment_status }}"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentTimestamp",
            "value": "${{ steps.current-time.outputs.time }}"
          }
        ]
        EOF
        )

        AUTH=$(echo -n :${AZURE_DEVOPS_PAT} | base64)
        
        ./execute_curl.sh "${AZURE_DEVOPS_ORG}" "${AZURE_DEVOPS_PROJECT}" "${AUTH}" "${JSON_DATA}"

    - name: Debug Output
      run: |
        echo "Deployment ID: ${{ github.run_number }}"
        echo "Deployment Status: ${{ github.event.inputs.deployment_status }}"
        echo "Timestamp: ${{ steps.current-time.outputs.time }}"