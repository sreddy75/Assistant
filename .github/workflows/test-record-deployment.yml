name: DORA-Aligned Deployment Tracking

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'Production'
        type: choice
        options:
        - Production
        - Staging
        - Development

jobs:
  record-deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time

    - name: Start Deployment Tracking
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
      run: |
        # URL encode function (as before)
        
        # Construct the URL
        URL="https://dev.azure.com/${ENCODED_ORG}/${ENCODED_PROJECT}/_apis/wit/workitems/\$Deployment?api-version=6.0"
        
        # Construct JSON data for deployment start
        JSON_DATA=$(cat << EOF
        [
          {
            "op": "add",
            "path": "/fields/System.Title",
            "value": "Deployment to ${{ github.event.inputs.environment }} - ${{ github.sha }}"
          },
          {
            "op": "add",
            "path": "/fields/System.State",
            "value": "In Progress"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentStartTime",
            "value": "${{ steps.current-time.outputs.time }}"
          },
          {
            "op": "add",
            "path": "/fields/Custom.Environment",
            "value": "${{ github.event.inputs.environment }}"
          },
          {
            "op": "add",
            "path": "/fields/Custom.Version",
            "value": "${{ github.sha }}"
          }
        ]
        EOF
        )
        
        # Create the work item
        RESPONSE=$(curl -s -X POST "${URL}" \
          -H "Content-Type: application/json-patch+json" \
          -H "Authorization: Basic $(echo -n :${AZURE_DEVOPS_PAT} | base64)" \
          -d "$JSON_DATA")
        
        # Extract and store the work item ID
        WORK_ITEM_ID=$(echo "$RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        echo "WORK_ITEM_ID=$WORK_ITEM_ID" >> $GITHUB_ENV
        
        echo "Deployment tracking started. Work Item ID: $WORK_ITEM_ID"

    # Your actual deployment steps would go here
    - name: Simulate Deployment
      run: |
        echo "Simulating deployment to ${{ github.event.inputs.environment }}..."
        sleep 10  # Simulate some deployment time
        # Add your actual deployment commands here

    - name: Complete Deployment Tracking
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
      run: |
        # URL for updating the work item
        URL="https://dev.azure.com/${ENCODED_ORG}/${ENCODED_PROJECT}/_apis/wit/workitems/${WORK_ITEM_ID}?api-version=6.0"
        
        # Construct JSON data for deployment completion
        JSON_DATA=$(cat << EOF
        [
          {
            "op": "add",
            "path": "/fields/System.State",
            "value": "Completed"
          },
          {
            "op": "add",
            "path": "/fields/Custom.DeploymentEndTime",
            "value": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          }
        ]
        EOF
        )
        
        # Update the work item
        RESPONSE=$(curl -s -X PATCH "${URL}" \
          -H "Content-Type: application/json-patch+json" \
          -H "Authorization: Basic $(echo -n :${AZURE_DEVOPS_PAT} | base64)" \
          -d "$JSON_DATA")
        
        echo "Deployment tracking completed. Work Item ID: $WORK_ITEM_ID"

    - name: Debug Output
      run: |
        echo "Deployment Environment: ${{ github.event.inputs.environment }}"
        echo "Deployment Version: ${{ github.sha }}"
        echo "Work Item ID: ${{ env.WORK_ITEM_ID }}"